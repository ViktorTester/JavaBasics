package day5;

import java.util.Arrays;

public class SingleDimensionalArray {

    public static void main(String[] args) {

// Способ 1

        // Зачастую массив заполняется через цикл, так как данные в него
        // добавляются постепенно, например, по мере их генерации.

        // Создание нового массива чисел длиной в 5 элементов
        int[] arr = new int[5];

        // Цикл длится пока значение переменной меньше длины массива, то есть пяти
        for (int i = 0; i < arr.length; i++) {

            // С каждой итерацией элемент массива с индексом равным значению переменной,
            // получает значение равное значению переменной начиная с 0
            arr[i] = i;

            // После присуждения сразу происходит вывод в консоль
            // Таким образом можно видеть что в итоге окажется внутри массива
            System.out.print(arr[i] + " "); // 0 1 2 3 4
        }


// Способ 2 (Можно, но не нужно)

        // Создание нового массива строк длиной в 5 элементов
        String[] strArr = new String[5];

        // Каждый элемент массива задается вручную
        // Это можно делать если массив маленький, но это резко снижает
        // компактность кода, просто то же самое можно сделать циклом. Это
        // будет правильнее, а самое главное - короче
        strArr[0] = "Hello";
        strArr[1] = "World";
        strArr[2] = "Hello";
        strArr[3] = "World";
        strArr[4] = "Hello";

        // Цикл перебирает уже заполненный массив и выводит его элементы в консоль
        for (int i = 0; i < strArr.length; i++) {

            // Таким образом можно видеть что в итоге окажется внутри массива
            System.out.print(strArr[i] + " "); // Hello World Hello World Hello
        }


// Способ 3 (Имеет право на жизнь и часто используется)

        // Массив заполняется сразу же при инициализации
        char[] charArr = {'A', 'B', 'C', 'D', 'E', 'F'};

        // Цикл перебирает уже заполненный массив и выводит его элементы в консоль
        for (int i = 0; i < charArr.length; i++) {

            // Таким образом можно видеть что в итоге окажется внутри массива
            System.out.print(charArr[i] + " "); // A B C D E F
        }

        // У массива есть важная характеристика - длина
        // Вот так она определяется и выводится:
        System.out.print( "\n" + "3rd approach array len is " + charArr.length);
        // 3rd approach array len is 6

        int[] arr5 = {};

        System.out.println( "\n" + arr5.length + " is an empty array len");
        // 0 is an empty array len


    }
}
