package day13.main_and_class_separately;

// main метод находится отдельно от класса, в котором инициированы статические
// переменные и метод, необходимые нам в этом файле. Это накладывает некие ограничения:
// несмотря на то, что main метод, как и переменные/методы нужные нам, все еще статичны,
// к ним уже не получится обратиться напрямую, однако и объект класса создавать все
// еще не нужно - достаточно перед переменной/методом написать полное имя
// его родительского класса
public class StaticKeywordMain {

    // Статический метод
    public static void main(String[] args) {

        // вывод статического переменной в консоль, не создавая объект класса,
        // но так как класс, в котором эта переменная задана, находится в другом
        // файле, перед переменной нужно упомянуть название этого класса
        System.out.println(StaticKeyword.a);  // 10
        // аналогично с вызовом статического метода - перед его названием
        // нужно прописать имя его родительского класса
        StaticKeyword.m1();  // This is a m1 - static method


// С переменной 'b' и методом 'm2 все остается в силе - напрямую обратиться
// к ним все еще нельзя, и нужно будет создавать объект класса

        // создание объекта класса
        StaticKeyword stk = new StaticKeyword();
        // вывод НЕ статического переменной в консоль, обращаясь к ней через объект класса
        System.out.println(stk.b);  // 20
        // вызов НЕ статического метода, обращаясь к нему через объект класса
        stk.m2();  // This is a m2 - non-static method

        // Несмотря на то, что метод m() сам по себе имеет полный доступ к любым
        // методам и переменным, чтобы вызвать его внутри статического метода,
        // нужно опять обращаться к нему через объект класса
        stk.m();
        // 10
        // 20
        // This is a m1 - static method
        // This is a m2 - non-static method

    }
}
