package day13.main_and_class_together;

// main метод находится в одном файле с классом, в котором задаются статические переменные,
// что позволяет обращаться к ним напрямую, без создания объекта класса
public class StaticKeywordClassMain {

// создание статической переменной
    static int a = 10;
    // создание не статической переменной
    int b = 20;

// создание статического метода 1
    static void m1() {
        System.out.println("This is a m1 - static method");
    }
    // создание не статического метода 2
    void m2() {
        System.out.println("This is a m2 - non-static method");
    }

// создание не статического метода 3
    // Не статический метод имеет полный доступ к любым переменным и методам
    // (статическим и не статическим) без создания объекта класса
    void m(){
        System.out.println(a);
        System.out.println(b);
        m1();
        m2();
    }

// Статический метод
    public static void main(String[] args) {

        // вывод статического переменной в консоль, не создавая объект класса
        System.out.println(a);  // 10
        // вызов статического метода, не создавая объект класса
        m1();  // This is a m1 - static method


// Обратиться к переменной 'b' и методу 'm2 напрямую уже
// не получится, и нужно будет создавать объект класса

        // создание объекта класса
        StaticKeywordClassMain stk = new StaticKeywordClassMain();
        // вывод НЕ статического переменной в консоль, обращаясь к ней через объект класса
        System.out.println(stk.b);  // 20
        // вызов НЕ статического метода, обращаясь к нему через объект класса
        stk.m2();  // This is a m2 - non-static method

        // Несмотря на то, что метод m() сам по себе имеет полный доступ к любым
        // методам и переменным, чтобы вызвать его внутри статического метода,
        // нужно опять обращаться к нему через объект класса
        stk.m();
        // 10
        // 20
        // This is a m1 - static method
        // This is a m2 - non-static method

    }
}
